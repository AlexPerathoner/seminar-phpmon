//
//  PhpHelper.swift
//  PHP Monitor
//
//  Created by Nico Verbruggen on 17/03/2022.
//  Copyright Â© 2022 Nico Verbruggen. All rights reserved.
//

import Foundation

class PhpHelper {

    static let keyPhrase = "This file was automatically generated by PHP Monitor."

    public static func generate(for version: String) {
        // Take the PHP version (e.g. "7.2") and generate a dotless version
        let dotless = version.replacingOccurrences(of: ".", with: "")

        do {
            let destination = "/usr/local/bin/pm\(dotless)"
            if FileManager.default.fileExists(atPath: destination) {
                let contents = try String(contentsOfFile: destination)
                if !contents.contains(keyPhrase) {
                    Log.info("The file at '\(destination)' already exists and was not generated by PHP Monitor "
                             + "(or is unreadable). Not updating this file.")
                    return
                }
            }

            // Let's follow the symlink to the PHP binary folder
            let path = URL(fileURLWithPath: "\(Paths.optPath)/php@\(version)/bin")
                .resolvingSymlinksInPath().path

            // The contents of the script!
            let script = """
                #!/bin/zsh
                # \(keyPhrase)
                # It reflects the location of PHP \(version)'s binaries on your system.
                # Usage: . pm\(dotless)
                [[ $ZSH_EVAL_CONTEXT =~ :file$ ]] \\
                    && echo "PHP Monitor has enabled this terminal to use PHP \(version)." \\
                    || echo "You must run '. pm\(dotless)' (or 'source pm\(dotless)') instead!";
                export PATH=\(path):$PATH
                """

            // Write to the destination
            try script.write(
                to: URL(fileURLWithPath: destination),
                atomically: true,
                encoding: String.Encoding.utf8
            )

            // Make sure the file is executable
            Shell.run("chmod +x \(destination)")
        } catch {
            print(error)
            Log.err("Could not write PHP Monitor helper for PHP \(version) to /usr/local/bin/pm\(dotless)")
        }
    }

}
